" Vundle
set nocompatible
filetype off

source ~/.config/nvim/plugins.vim

" general
set backup
set history=50
set ruler
set showcmd
set incsearch
set number
set guicursor=
" manage tabs
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
" spelling
set spell spelllang=en
" terminal settings
set encoding=utf-8
set fileencoding=utf-8
set t_Co=256
" set term=xterm-256color
set termencoding=utf-8



let g:python_host_prog  = '/usr/bin/python3'
let g:python3_host_prog = '/usr/bin/python3'

set backupdir=~/.vim/tmp,.
set directory=~/.vim/tmp,.

if has('mouse')
    set mouse=a
endif

if &t_Co > 2 || has("gui_running")
    syntax on
    set hlsearch
endif

" Highlight Long Lines
set colorcolumn=80
hi clear SpellBad
hi SpellBad cterm=underline

" Key Binding.

set backspace=indent,eol,start

command W w
command Q q
command WQ wq
map <C-a> :!make
map <F7> mzgg=G`z
map Q gq
inoremap <C-U> <C-G>u<C-U>

" Mathematic

map <leader>km :set keymap=mathematic<CR>
map <leader>kn :set keymap=<CR>
nmap <leader>\ :KeyHelper<CR>
let g:mathematic_fuzzymatch = 1

if has("autocmd")
    filetype plugin indent on
    augroup vimrcEx
        au!
        autocmd FileType text setlocal textwidth=78
        autocmd BufReadPost *
                    \ if line("'\"") > 1 && line("'\"") <= line("$") |
                    \   exe "normal! g`\"" |
                    \ endif
        autocmd FileType c,python,fortran,ruby,asm,markdown setlocal number
        autocmd FileType yaml,javascript,hcl setlocal tabstop=2
        autocmd FileType yaml,javascript,hcl setlocal shiftwidth=2
        autocmd FileType yaml,javascript,hcl setlocal softtabstop=2

    augroup END
    
    augroup rainbow_lisp
        autocmd!
        autocmd FileType lisp,clojure,scheme,javascript,c,rust,python RainbowParentheses
    augroup END

    augroup OpenAllFoldsOnFileOpen
        autocmd!
        autocmd BufRead * normal zR
    augroup END

    autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
endif

if !exists(":DiffOrig")
    command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
                \ | wincmd p | diffthis
endif

let g:autoformat_autoindent = 0
let g:autoformat_retab = 0
let g:autoformat_remove_trailing_spaces = 0

" Deoplete

let g:deoplete#enable_at_startup = 1
call deoplete#custom#source('_',
            \ 'disabled_syntaxes', ['Comment', 'String'])

call neomake#configure#automake('w')

let g:rainbow#max_level = 16
let g:rainbow#pairs = [['(', ')'], ['[', ']'], ['{', '}']]

let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size = 1

let g:indentLine_conceallevel = &conceallevel
let g:indentLine_char_list = ['|', '¦', '┆', '┊']
let g:indentLine_concealcursor = 'inc'
let g:indentLine_enabled = 1
let g:indentLine_setColors = 1
let g:indentLine_leadingSpaceChar = ' '
let g:indentLine_leadingSpaceEnabled = 1

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>

set foldmethod=indent


source ~/.config/nvim/theme.vim
